@page "/addresses"
@rendermode InteractiveServer

@using BlazorApp.DA;
@using BlazorApp.Enums;
@using BlazorApp.GeoDataManager
@using BlazorBootstrap;

@inject IAddressesDataAccess addressesDataAccess;
@inject IGeoDataManager geoDataManager;

<Button @ref="loadCoordinatesButton" Color="ButtonColor.Primary" @onclick="LoadCoordinatesData"> Подтянуть координаты </Button>


<Grid @ref="addressGrid" TItem="Address" Class="table table-bordered table-striped" DataProvider="@AddressesDataProvider"
     AllowPaging="true" PageSize="10" AllowFiltering="true" Responsive="true">


        <GridColumn TItem="Address" HeaderText="Вулиця" PropertyName="streetName" FilterTextboxWidth="200"
            SortKeySelector="item => item.streetName">
            @context.streetName
        </GridColumn>
        <GridColumn TItem="Address" HeaderText="Будинок" PropertyName="building"
            SortKeySelector="item => item.building">
            @context.building
        </GridColumn>
        <GridColumn TItem="Address" HeaderText="Пріорітет" PropertyName="priority">
            <PriorityInputComponent addressId="context.Id" priority="context.priority" />
        </GridColumn>

        <GridColumn TItem="Address" HeaderText="Альт. вулиця" PropertyName="streetAlias">
            <AliasInputComponent addressId="context.Id" alias="@context.streetAlias" streetAlias="@true"/>
        </GridColumn>
        <GridColumn TItem="Address" HeaderText="Альт. буд" PropertyName="buildingAlias">
            <AliasInputComponent addressId="context.Id" alias="@context.buildingAlias"streetAlias="@false" />
        </GridColumn>

        <GridColumn TItem="Address" HeaderText="Широта">
            <CoordinatesInputComponent addressId="context.Id" coordinate="@context.Latitude" Lat="@true" /> 
        </GridColumn>
        <GridColumn TItem="Address" HeaderText="Долгота">
            <CoordinatesInputComponent addressId="context.Id" coordinate="@context.Longtitude" Lon="@true" />
        </GridColumn>

</Grid>


@code {

    private Button loadCoordinatesButton = default!;
    private Grid<Address> addressGrid = default!;
    private async Task<GridDataProviderResult<Address>> AddressesDataProvider(GridDataProviderRequest<Address> request)
    {
        List<Address> addresses = await addressesDataAccess.GetAddresses();
        return await Task.FromResult(request.ApplyTo(addresses));
    }

    private async void LoadCoordinatesData()
    {
        loadCoordinatesButton.ShowLoading("Загрузка...");
        await geoDataManager.PopulateApplicationsWithGeoData();
        await addressGrid.RefreshDataAsync();
        loadCoordinatesButton.HideLoading();

    }

}
