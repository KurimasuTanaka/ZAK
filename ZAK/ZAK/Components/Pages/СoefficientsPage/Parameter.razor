@using ZAK.DA;
@using BlazorApp.Enums;
@using BlazorBootstrap;

@inject ICoefficientRepository _coefficientRepository;

<td class="pr-4">
    <h6>@coefficient.parameterAlias</h6>
</td>
<td style="display: flex; flex-direction: column;">
    <NumberInput TValue="double" @bind-Value="@coefficient.coefficient" @bind-Value:after="UpdateParameterValue" />
    <div style="display: flex; flex-direction: row;">
        <Switch @bind-Value="coefficient.infinite" @bind-Value:after="UpdateInfinityStatus" />
        <small>Максимальний пріорітет</small>
    </div>
</td>

@code {
    [Parameter] public Coefficient coefficient { get; set; } = new Coefficient();

    private bool _initialized = false;

    private async void UpdateParameterValue()
    {
        if (!_initialized)
        {
            _initialized = true;
            return;
        }

        Coefficient oldCoefficient = await _coefficientRepository.GetByIdAsync(coefficient.id);
        oldCoefficient.coefficient = coefficient.coefficient;
        await _coefficientRepository.UpdateAsync(oldCoefficient);
    }

    private async void UpdateInfinityStatus()
    {
        Coefficient oldCoefficient = await _coefficientRepository.GetByIdAsync(coefficient.id);
        oldCoefficient.infinite = coefficient.infinite;
        await _coefficientRepository.UpdateAsync(oldCoefficient);
    }


}
