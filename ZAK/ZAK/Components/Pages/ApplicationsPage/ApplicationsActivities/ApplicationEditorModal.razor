@using BlazorApp.DA;

@inject IDao<Application, ApplicationModel> applicationsDataAccess;


<Modal @ref="modal" Title="Редагування заявки" Size="ModalSize.Large">
    <BodyTemplate>
        <ApplicationEditor application="@application" applicationUpdateSubmited="FormSubmitted" />
    </BodyTemplate>
</Modal>


@code {
    [Parameter] public EventCallback ApplicationsInformationWasChanged { get; set; }

    [Parameter] public Application application { get; set; } = default!;

    private Modal modal = default!;

    async void FormSubmitted()
    {
        await applicationsDataAccess.Update(
        application,
        application.id,
        findPredicate: app => 
        {
            if(application.id == app.id) return true;
            else return false;
        },
        includeQuery: app =>
        {
            return app.Include(app => app.address);
        },
        inputDataProccessingQuery: (newApplication, dbContext) =>
        {
            if (newApplication.address is not null)
            {

                Address? address = dbContext.Set<AddressModel>()!.
                    Where(add => add.streetName == newApplication.address.streetName && add.building == newApplication.address.building).
                    Select(add => new Address(add)).FirstOrDefault();

                if (address is null)
                {
                    newApplication.address = dbContext.Set<AddressModel>().Add(newApplication.address).Entity;
                }
                dbContext.Attach<AddressModel>(newApplication.address);

            }

            return newApplication;
        });


        await ApplicationsInformationWasChanged.InvokeAsync();
    }
    public async Task ShowModal(Application application)
    {
        this.application= application;
        await modal.ShowAsync();
    }
}
