<table class="blackoutTable">
    <tr>
        <BlackoutTimeComponent @ref="blackoutTime1" />
        <BlackoutTimeComponent @ref="blackoutTime2" />
        <BlackoutTimeComponent @ref="blackoutTime3" />
    </tr>
</table>

<style>
    .blackoutTable {
        width: 100%;
        height: 100%;
        border-collapse: collapse;
    }
</style>

@code {
    [Parameter] public int group { get; set; } = 0;
    [Parameter] public int day { get; set; } = 0;
    [Parameter] public int time { get; set; } = 0;

    [Parameter] public List<BlackoutModel> blackoutZones { get; set; } = new List<BlackoutModel>();

    private BlackoutTimeComponent blackoutTime1 = default!;
    private BlackoutTimeComponent blackoutTime2 = default!;
    private BlackoutTimeComponent blackoutTime3 = default!;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            blackoutTime1.SetColor(blackoutZones.FirstOrDefault(x => x.time == time && x.day == day && x.group == group).zone);

            if (time + 1 != 10) blackoutTime2.SetColor(blackoutZones.FirstOrDefault(x => x.time == time + 1 && x.day == day &&
            x.group == group).zone);
            else
            {
                blackoutTime2.SetColor(BlackoutZone.Unknown);
                blackoutTime3.SetColor(BlackoutZone.Unknown);
            }

            if (time + 1 != 10) blackoutTime3.SetColor(blackoutZones.FirstOrDefault(x => x.time == time && x.day == day && x.group ==
            group).zone);
            else
            {
                blackoutTime3.SetColor(BlackoutZone.Unknown);

            }
        }
    }
}
