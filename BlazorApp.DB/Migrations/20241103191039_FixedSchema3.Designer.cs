// <auto-generated />
using System;
using BlazorApp.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp.DB.Migrations
{
    [DbContext(typeof(BlazorAppDbContext))]
    [Migration("20241103191039_FixedSchema3")]
    partial class FixedSchema3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("BlazorApp.DB.AddressAliasModel", b =>
                {
                    b.Property<int>("addressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("buildingAlias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("streetAlias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("addressId");

                    b.ToTable("addressAliases");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("building")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("districtName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("streetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("districtName");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressPriorityModel", b =>
                {
                    b.Property<int>("addressId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("priority")
                        .HasColumnType("REAL");

                    b.HasKey("addressId");

                    b.ToTable("addressPriorities");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressesCoordinates", b =>
                {
                    b.Property<int>("addressId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("lat")
                        .HasColumnType("REAL");

                    b.Property<double>("lon")
                        .HasColumnType("REAL");

                    b.HasKey("addressId");

                    b.ToTable("AddressesCoordinates");
                });

            modelBuilder.Entity("BlazorApp.DB.ApplicationModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("addressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("endHour")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstPart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("freeCable")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("hot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ignored")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("inSchedule")
                        .HasColumnType("INTEGER");

                    b.Property<string>("masterComment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("maxDaysForConnection")
                        .HasColumnType("INTEGER");

                    b.Property<int>("month")
                        .HasColumnType("INTEGER");

                    b.Property<string>("operatorComment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("secondPart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("startHour")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("statusWasChecked")
                        .HasColumnType("INTEGER");

                    b.Property<int>("stretchingStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("tarChangeApp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("timeRangeIsSet")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("urgent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("year")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("addressId");

                    b.ToTable("applications");
                });

            modelBuilder.Entity("BlazorApp.DB.BrigadeModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("applicationsIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("brigadeNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("brigades");
                });

            modelBuilder.Entity("BlazorApp.DB.DistrictModel", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("name");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("BlazorApp.DB.Models.CoefficientModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("coefficient")
                        .HasColumnType("REAL");

                    b.Property<bool>("infinite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("parameter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("parameterAlias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("coefficients");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressAliasModel", b =>
                {
                    b.HasOne("BlazorApp.DB.AddressModel", "address")
                        .WithOne("addressAlias")
                        .HasForeignKey("BlazorApp.DB.AddressAliasModel", "addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressModel", b =>
                {
                    b.HasOne("BlazorApp.DB.DistrictModel", "district")
                        .WithMany("addresses")
                        .HasForeignKey("districtName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("district");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressPriorityModel", b =>
                {
                    b.HasOne("BlazorApp.DB.AddressModel", "address")
                        .WithOne("addressPriority")
                        .HasForeignKey("BlazorApp.DB.AddressPriorityModel", "addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressesCoordinates", b =>
                {
                    b.HasOne("BlazorApp.DB.AddressModel", "address")
                        .WithOne("coordinates")
                        .HasForeignKey("BlazorApp.DB.AddressesCoordinates", "addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");
                });

            modelBuilder.Entity("BlazorApp.DB.ApplicationModel", b =>
                {
                    b.HasOne("BlazorApp.DB.AddressModel", "address")
                        .WithMany("applications")
                        .HasForeignKey("addressId");

                    b.Navigation("address");
                });

            modelBuilder.Entity("BlazorApp.DB.AddressModel", b =>
                {
                    b.Navigation("addressAlias");

                    b.Navigation("addressPriority");

                    b.Navigation("applications");

                    b.Navigation("coordinates");
                });

            modelBuilder.Entity("BlazorApp.DB.DistrictModel", b =>
                {
                    b.Navigation("addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
